
# BuildKit

BuildKit is a collection of configurations, scripts and Xcode project templates organization to manage creating, using, building and sharing static libraries and iOS applications.



 * Xcode configurations shared by all projects that leverage multi-layered build settings provided by the Xcode build system.
 * Directory layout for different project kinds including: 
   * **Applications** - Generally used
   * **Catalogs** -
   * **Libraries** -
   Xcode projects created with the BuildKit Application or Static Library project templates
 * Shared location for libraries builds shared by all application projects. 
 * Cocoa static library projects that mimics the layout of frameworks on Mac OS X. Provides:
   * 
 * Facilitates using #import <YURLibrary/YURClass.h> in any project, application or library, that references another library.
 * Scripts for copying built libraries and resource bundles to shared location and for inclusion into application target bundles.
 * Support for targeting incremental iOS SDK versions.
 * Defaults to Apple recommendation of always using the latest iOS SDK and setting Deployment Target as appropriate. Configurable
 * Xcode project templates for Static Libraries and Univeral Application.



* BuildKit has been used with Subversion and Git. In Subversion, the entire directory structure is usually placed in /trunk and the contents of the trunk is branched or tagged, creating development snapshots or release version tag that are completely buildable. With Git, BuildKit can be easily used as the root of a project repo with a single library and demo application (as is frequent on many public GitHub projects) or in a manner similar to Subversion where numerous libraries and applications live within a master and multiple branches or tags can be used.

## Adopting BuildKit

1. Download the latest version or clone the repository.

2. Rename as desired.


## Current Configuations

* SDK: iOS 4.1
* Deployment Target SDK: 3.2
* LLVM/Clang 1.5
* -Xclang -fobjc-nonfragile-abi2 (allows removal of @synthesize with modern runtime ABI)
* -D__IPHONE_OS_VERSION_MIN_REQUIRED=030200 (because 4.1 SDK simulator settings was fraked)

* No testing has been done on iOS 4.2 SDK and only limited tests with Xcode 4. Both are still under NDA so changes will come as appropriate.



## History

### September 17, 2010

* Add simple examples
* Release updates to Github

### September 2, 2010 (Internal)

* Update to iOS 4.1 SDK

### June 18, 2010 (Internal)

* Migrate from Subversion to Git.

### June 1, 2010 (Internal)

* Deal with iOS 4.0 and Xcode 3.2.4 *ignoring* SDK_ROOT set from .xcconfig on project root.

### November 3, 2008

* Push basics to Github to share with interested people at Seattle iPhone Tech Talk.

### October 2009

* Formalize from projects and Mac OS X build structure.


## License and Copyright

In general, MIT License

Copy, modify and share back any additions you find useful...


[Build Setting Evaluation and Configuration Files](http://developer.apple.com/library/ios/#documentation/DeveloperTools/Conceptual/XcodeBuildSystem/400-Build_Configurations/build_configs.html)
